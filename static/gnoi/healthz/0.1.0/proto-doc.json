{
  "files": [
    {
      "name": "healthz.proto",
      "description": "",
      "package": "gnoi.healthz",
      "hasEnums": true,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [
        {
          "name": "Status",
          "longName": "Status",
          "fullName": "gnoi.healthz.Status",
          "description": "",
          "values": [
            {
              "name": "STATUS_UNSPECIFIED",
              "number": "0",
              "description": "The path doesn't support healthz"
            },
            {
              "name": "STATUS_HEALTHY",
              "number": "1",
              "description": "The path is healthy"
            },
            {
              "name": "STATUS_UNHEALTHY",
              "number": "2",
              "description": "The path is unhealthy"
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "AcknowledgeRequest",
          "longName": "AcknowledgeRequest",
          "fullName": "gnoi.healthz.AcknowledgeRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "path",
              "description": "",
              "label": "",
              "type": "Path",
              "longType": "gnoi.types.Path",
              "fullType": "gnoi.types.Path",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "id",
              "description": "Healthz event id.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AcknowledgeResponse",
          "longName": "AcknowledgeResponse",
          "fullName": "gnoi.healthz.AcknowledgeResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "status",
              "description": "",
              "label": "",
              "type": "ComponentStatus",
              "longType": "ComponentStatus",
              "fullType": "gnoi.healthz.ComponentStatus",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ArtifactHeader",
          "longName": "ArtifactHeader",
          "fullName": "gnoi.healthz.ArtifactHeader",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "ID of the artifact.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "file",
              "description": "",
              "label": "",
              "type": "FileArtifactType",
              "longType": "FileArtifactType",
              "fullType": "gnoi.healthz.FileArtifactType",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "artifact_type",
              "defaultValue": ""
            },
            {
              "name": "proto",
              "description": "",
              "label": "",
              "type": "ProtoArtifactType",
              "longType": "ProtoArtifactType",
              "fullType": "gnoi.healthz.ProtoArtifactType",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "artifact_type",
              "defaultValue": ""
            },
            {
              "name": "custom",
              "description": "",
              "label": "",
              "type": "Any",
              "longType": "google.protobuf.Any",
              "fullType": "google.protobuf.Any",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "artifact_type",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ArtifactRequest",
          "longName": "ArtifactRequest",
          "fullName": "gnoi.healthz.ArtifactRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Artifact ID to be streamed.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ArtifactResponse",
          "longName": "ArtifactResponse",
          "fullName": "gnoi.healthz.ArtifactResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "header",
              "description": "Header is the first message in the stream. It contains\nthe id of the artifact and metadata for the artifact\nbased on the type of the artifact.\nOC defines FileArtifactType and ProtoArtifactType.",
              "label": "",
              "type": "ArtifactHeader",
              "longType": "ArtifactHeader",
              "fullType": "gnoi.healthz.ArtifactHeader",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "contents",
              "defaultValue": ""
            },
            {
              "name": "trailer",
              "description": "",
              "label": "",
              "type": "ArtifactTrailer",
              "longType": "ArtifactTrailer",
              "fullType": "gnoi.healthz.ArtifactTrailer",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "contents",
              "defaultValue": ""
            },
            {
              "name": "bytes",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "contents",
              "defaultValue": ""
            },
            {
              "name": "proto",
              "description": "",
              "label": "",
              "type": "Any",
              "longType": "google.protobuf.Any",
              "fullType": "google.protobuf.Any",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "contents",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ArtifactTrailer",
          "longName": "ArtifactTrailer",
          "fullName": "gnoi.healthz.ArtifactTrailer",
          "description": "ArtifactTrailer is the last message in the artifact stream.",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "CheckRequest",
          "longName": "CheckRequest",
          "fullName": "gnoi.healthz.CheckRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "path",
              "description": "",
              "label": "",
              "type": "Path",
              "longType": "gnoi.types.Path",
              "fullType": "gnoi.types.Path",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "event_id",
              "description": "When event_id is populated the check request refers to an\nevent that has already been reported by the system. The\ndevice receiving the CheckRequest should populate artifacts\nthat are relevant to the event that were not automatically\ncollected. Previous artifacts MUST NOT be overwritten.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CheckResponse",
          "longName": "CheckResponse",
          "fullName": "gnoi.healthz.CheckResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "status",
              "description": "",
              "label": "",
              "type": "ComponentStatus",
              "longType": "ComponentStatus",
              "fullType": "gnoi.healthz.ComponentStatus",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ComponentStatus",
          "longName": "ComponentStatus",
          "fullName": "gnoi.healthz.ComponentStatus",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "path",
              "description": "path of subcomponent.",
              "label": "",
              "type": "Path",
              "longType": "gnoi.types.Path",
              "fullType": "gnoi.types.Path",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "subcomponents",
              "description": "Subcomponents that are aggregated by this status.",
              "label": "repeated",
              "type": "ComponentStatus",
              "longType": "ComponentStatus",
              "fullType": "gnoi.healthz.ComponentStatus",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "Status of this component.",
              "label": "",
              "type": "Status",
              "longType": "Status",
              "fullType": "gnoi.healthz.Status",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "healthz",
              "description": "Opaque data for how the healthcheck is implemented.  This can be any proto\ndefined by the vendor.  This could be the equivalent to outputs like\n\"show tech\" or core files or any other diagnostic data.",
              "label": "",
              "type": "Any",
              "longType": "google.protobuf.Any",
              "fullType": "google.protobuf.Any",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": "",
              "options": {
                "deprecated": true
              }
            },
            {
              "name": "artifacts",
              "description": "Artifacts provides links to all artifacts contained in this event.\nThe individual artifacts can be retrieved via the Artifact() RPC.",
              "label": "repeated",
              "type": "ArtifactHeader",
              "longType": "ArtifactHeader",
              "fullType": "gnoi.healthz.ArtifactHeader",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "id",
              "description": "ID is the unique key for this event in the system.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "acknowledged",
              "description": "Acknowledged is set when at least one caller has processed the event.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "created",
              "description": "Created is the timestamp when this event was created.",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "expires",
              "description": "Expires is the timestamp when the system will clean up the\nartifact. If unset, the artifact is not scheduled for garbage\ncollection.",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FileArtifactType",
          "longName": "FileArtifactType",
          "fullName": "gnoi.healthz.FileArtifactType",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "Local file name of the artifact.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "path",
              "description": "Path to file on the local file system. (optional)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "mimetype",
              "description": "Mimetype of the file.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "size",
              "description": "Size of the file.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "hash",
              "description": "Hash of the file.",
              "label": "",
              "type": "HashType",
              "longType": "gnoi.types.HashType",
              "fullType": "gnoi.types.HashType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetRequest",
          "longName": "GetRequest",
          "fullName": "gnoi.healthz.GetRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "path",
              "description": "Path defines the component to try to fetch healthz state for. Get\nretrieves the latest healthz results for a specific component\nthat have been collected as a result of a call to Check, or by\nthe target itself.",
              "label": "",
              "type": "Path",
              "longType": "gnoi.types.Path",
              "fullType": "gnoi.types.Path",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetResponse",
          "longName": "GetResponse",
          "fullName": "gnoi.healthz.GetResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "component",
              "description": "",
              "label": "",
              "type": "ComponentStatus",
              "longType": "ComponentStatus",
              "fullType": "gnoi.healthz.ComponentStatus",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListRequest",
          "longName": "ListRequest",
          "fullName": "gnoi.healthz.ListRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "path",
              "description": "",
              "label": "",
              "type": "Path",
              "longType": "gnoi.types.Path",
              "fullType": "gnoi.types.Path",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "include_acknowledged",
              "description": "By default only the unacknowledged events for the component will be\nreturned.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListResponse",
          "longName": "ListResponse",
          "fullName": "gnoi.healthz.ListResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "statuses",
              "description": "",
              "label": "repeated",
              "type": "ComponentStatus",
              "longType": "ComponentStatus",
              "fullType": "gnoi.healthz.ComponentStatus",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ProtoArtifactType",
          "longName": "ProtoArtifactType",
          "fullName": "gnoi.healthz.ProtoArtifactType",
          "description": "Generic proto message artifact stream.\nThis proto tells the caller that the artifact stream\nwill be a stream of proto encoded messages that make up\nthe artifact. Each message must be deserialized by the caller\nand there are no other assumptions about the number of\nmessages or length of the stream or how those messages are to\nbe reassembled.",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        }
      ],
      "services": [
        {
          "name": "Healthz",
          "longName": "Healthz",
          "fullName": "gnoi.healthz.Healthz",
          "description": "The Healthz service provides access to the status of a path on the\nsystem. Addtitionally it allows the implementor to provide path specific\ndiagnositic data into the status return.\n\nHealthz is expected to work in conjunction with the component OC model.",
          "methods": [
            {
              "name": "Get",
              "description": "Get will get the latest health status for a gNMI path.  If no status is\navailable for the requested path an error will be returned.",
              "requestType": "GetRequest",
              "requestLongType": "GetRequest",
              "requestFullType": "gnoi.healthz.GetRequest",
              "requestStreaming": false,
              "responseType": "GetResponse",
              "responseLongType": "GetResponse",
              "responseFullType": "gnoi.healthz.GetResponse",
              "responseStreaming": false
            },
            {
              "name": "List",
              "description": "List returns all events for the provided component path.",
              "requestType": "ListRequest",
              "requestLongType": "ListRequest",
              "requestFullType": "gnoi.healthz.ListRequest",
              "requestStreaming": false,
              "responseType": "ListResponse",
              "responseLongType": "ListResponse",
              "responseFullType": "gnoi.healthz.ListResponse",
              "responseStreaming": false
            },
            {
              "name": "Acknowledge",
              "description": "Acknowledge will set the acknowledged field for the event.\nThis is an idempotent operation.",
              "requestType": "AcknowledgeRequest",
              "requestLongType": "AcknowledgeRequest",
              "requestFullType": "gnoi.healthz.AcknowledgeRequest",
              "requestStreaming": false,
              "responseType": "AcknowledgeResponse",
              "responseLongType": "AcknowledgeResponse",
              "responseFullType": "gnoi.healthz.AcknowledgeResponse",
              "responseStreaming": false
            },
            {
              "name": "Artifact",
              "description": "Artifact will stream the artifact contents for the provided artifact id.",
              "requestType": "ArtifactRequest",
              "requestLongType": "ArtifactRequest",
              "requestFullType": "gnoi.healthz.ArtifactRequest",
              "requestStreaming": false,
              "responseType": "ArtifactResponse",
              "responseLongType": "ArtifactResponse",
              "responseFullType": "gnoi.healthz.ArtifactResponse",
              "responseStreaming": true
            },
            {
              "name": "Check",
              "description": "Check will invoke the healthz on the provided component path. This RPC\ncan be expensive depending on the vendor implementation.",
              "requestType": "CheckRequest",
              "requestLongType": "CheckRequest",
              "requestFullType": "gnoi.healthz.CheckRequest",
              "requestStreaming": false,
              "responseType": "CheckResponse",
              "responseLongType": "CheckResponse",
              "responseFullType": "gnoi.healthz.CheckResponse",
              "responseStreaming": false
            }
          ]
        }
      ]
    }
  ],
  "scalarValueTypes": [
    {
      "protoType": "double",
      "notes": "",
      "cppType": "double",
      "csType": "double",
      "goType": "float64",
      "javaType": "double",
      "phpType": "float",
      "pythonType": "float",
      "rubyType": "Float"
    },
    {
      "protoType": "float",
      "notes": "",
      "cppType": "float",
      "csType": "float",
      "goType": "float32",
      "javaType": "float",
      "phpType": "float",
      "pythonType": "float",
      "rubyType": "Float"
    },
    {
      "protoType": "int32",
      "notes": "Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "int64",
      "notes": "Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint64 instead.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "uint32",
      "notes": "Uses variable-length encoding.",
      "cppType": "uint32",
      "csType": "uint",
      "goType": "uint32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int/long",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "uint64",
      "notes": "Uses variable-length encoding.",
      "cppType": "uint64",
      "csType": "ulong",
      "goType": "uint64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sint32",
      "notes": "Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sint64",
      "notes": "Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "fixed32",
      "notes": "Always four bytes. More efficient than uint32 if values are often greater than 2^28.",
      "cppType": "uint32",
      "csType": "uint",
      "goType": "uint32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "fixed64",
      "notes": "Always eight bytes. More efficient than uint64 if values are often greater than 2^56.",
      "cppType": "uint64",
      "csType": "ulong",
      "goType": "uint64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "sfixed32",
      "notes": "Always four bytes.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sfixed64",
      "notes": "Always eight bytes.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "bool",
      "notes": "",
      "cppType": "bool",
      "csType": "bool",
      "goType": "bool",
      "javaType": "boolean",
      "phpType": "boolean",
      "pythonType": "boolean",
      "rubyType": "TrueClass/FalseClass"
    },
    {
      "protoType": "string",
      "notes": "A string must always contain UTF-8 encoded or 7-bit ASCII text.",
      "cppType": "string",
      "csType": "string",
      "goType": "string",
      "javaType": "String",
      "phpType": "string",
      "pythonType": "str/unicode",
      "rubyType": "String (UTF-8)"
    },
    {
      "protoType": "bytes",
      "notes": "May contain any arbitrary sequence of bytes.",
      "cppType": "string",
      "csType": "ByteString",
      "goType": "[]byte",
      "javaType": "ByteString",
      "phpType": "string",
      "pythonType": "str",
      "rubyType": "String (ASCII-8BIT)"
    }
  ]
}