{
  "files": [
    {
      "name": "layer2.proto",
      "description": "",
      "package": "gnoi.layer2",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [
        {
          "name": "BERTState",
          "longName": "PerformBERTResponse.BERTState",
          "fullName": "gnoi.layer2.PerformBERTResponse.BERTState",
          "description": "",
          "values": [
            {
              "name": "UNKNOWN",
              "number": "0",
              "description": ""
            },
            {
              "name": "DISABLED",
              "number": "1",
              "description": ""
            },
            {
              "name": "RUNNING",
              "number": "2",
              "description": ""
            },
            {
              "name": "COMPLETE",
              "number": "3",
              "description": ""
            },
            {
              "name": "ERROR",
              "number": "4",
              "description": ""
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "ClearLLDPInterfaceRequest",
          "longName": "ClearLLDPInterfaceRequest",
          "fullName": "gnoi.layer2.ClearLLDPInterfaceRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "interface",
              "description": "",
              "label": "",
              "type": "Path",
              "longType": "gnoi.types.Path",
              "fullType": "gnoi.types.Path",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ClearLLDPInterfaceResponse",
          "longName": "ClearLLDPInterfaceResponse",
          "fullName": "gnoi.layer2.ClearLLDPInterfaceResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "ClearNeighborDiscoveryRequest",
          "longName": "ClearNeighborDiscoveryRequest",
          "fullName": "gnoi.layer2.ClearNeighborDiscoveryRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "protocol",
              "description": "",
              "label": "",
              "type": "L3Protocol",
              "longType": "gnoi.types.L3Protocol",
              "fullType": "gnoi.types.L3Protocol",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ClearNeighborDiscoveryResponse",
          "longName": "ClearNeighborDiscoveryResponse",
          "fullName": "gnoi.layer2.ClearNeighborDiscoveryResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "ClearSpanningTreeRequest",
          "longName": "ClearSpanningTreeRequest",
          "fullName": "gnoi.layer2.ClearSpanningTreeRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "interface",
              "description": "",
              "label": "",
              "type": "Path",
              "longType": "gnoi.types.Path",
              "fullType": "gnoi.types.Path",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ClearSpanningTreeResponse",
          "longName": "ClearSpanningTreeResponse",
          "fullName": "gnoi.layer2.ClearSpanningTreeResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "PerformBERTRequest",
          "longName": "PerformBERTRequest",
          "fullName": "gnoi.layer2.PerformBERTRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "ID for retrieving a previous BERT run data - optional.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "interface",
              "description": "",
              "label": "",
              "type": "Path",
              "longType": "gnoi.types.Path",
              "fullType": "gnoi.types.Path",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PerformBERTResponse",
          "longName": "PerformBERTResponse",
          "fullName": "gnoi.layer2.PerformBERTResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "state",
              "description": "",
              "label": "",
              "type": "BERTState",
              "longType": "PerformBERTResponse.BERTState",
              "fullType": "gnoi.layer2.PerformBERTResponse.BERTState",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "elapsed_period",
              "description": "BERT test length in nanoseconds.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pattern",
              "description": "Pattern used for the BERT test.",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "errors",
              "description": "Number of errors experienced since the start of the BERT test.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "received_bits",
              "description": "Number of bits received since the start of the BERT test.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SendWakeOnLANRequest",
          "longName": "SendWakeOnLANRequest",
          "fullName": "gnoi.layer2.SendWakeOnLANRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "interface",
              "description": "",
              "label": "",
              "type": "Path",
              "longType": "gnoi.types.Path",
              "fullType": "gnoi.types.Path",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "address",
              "description": "IP address of the WOL target.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "mac_address",
              "description": "MAC address of the target.",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SendWakeOnLANResponse",
          "longName": "SendWakeOnLANResponse",
          "fullName": "gnoi.layer2.SendWakeOnLANResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        }
      ],
      "services": [
        {
          "name": "Layer2",
          "longName": "Layer2",
          "fullName": "gnoi.layer2.Layer2",
          "description": "",
          "methods": [
            {
              "name": "ClearNeighborDiscovery",
              "description": "ClearNeighborDiscovery will clear either a specific neighbor entry or\nclear the entire table based on parameters provided.\nTODO: This method is subject to deprecation once OpenConfig models this\nstate.",
              "requestType": "ClearNeighborDiscoveryRequest",
              "requestLongType": "ClearNeighborDiscoveryRequest",
              "requestFullType": "gnoi.layer2.ClearNeighborDiscoveryRequest",
              "requestStreaming": false,
              "responseType": "ClearNeighborDiscoveryResponse",
              "responseLongType": "ClearNeighborDiscoveryResponse",
              "responseFullType": "gnoi.layer2.ClearNeighborDiscoveryResponse",
              "responseStreaming": false
            },
            {
              "name": "ClearSpanningTree",
              "description": "ClearSpanningTree will reset a blocked spanning tree interface.\nTODO: This method is subject to deprecation once OpenConfig models this\nstate.",
              "requestType": "ClearSpanningTreeRequest",
              "requestLongType": "ClearSpanningTreeRequest",
              "requestFullType": "gnoi.layer2.ClearSpanningTreeRequest",
              "requestStreaming": false,
              "responseType": "ClearSpanningTreeResponse",
              "responseLongType": "ClearSpanningTreeResponse",
              "responseFullType": "gnoi.layer2.ClearSpanningTreeResponse",
              "responseStreaming": false
            },
            {
              "name": "PerformBERT",
              "description": "PerformBERT will perform a BERT operation on a port. The stream will\nreturn the current state of the operation as well as the ID for the\noperation.",
              "requestType": "PerformBERTRequest",
              "requestLongType": "PerformBERTRequest",
              "requestFullType": "gnoi.layer2.PerformBERTRequest",
              "requestStreaming": false,
              "responseType": "PerformBERTResponse",
              "responseLongType": "PerformBERTResponse",
              "responseFullType": "gnoi.layer2.PerformBERTResponse",
              "responseStreaming": true
            },
            {
              "name": "ClearLLDPInterface",
              "description": "ClearLLDPInterface will clear all LLDP adjacencies on the provided\ninterface.",
              "requestType": "ClearLLDPInterfaceRequest",
              "requestLongType": "ClearLLDPInterfaceRequest",
              "requestFullType": "gnoi.layer2.ClearLLDPInterfaceRequest",
              "requestStreaming": false,
              "responseType": "ClearLLDPInterfaceResponse",
              "responseLongType": "ClearLLDPInterfaceResponse",
              "responseFullType": "gnoi.layer2.ClearLLDPInterfaceResponse",
              "responseStreaming": false
            },
            {
              "name": "SendWakeOnLAN",
              "description": "SendWakeOnLAN will send a WOL event on the requested interface.",
              "requestType": "SendWakeOnLANRequest",
              "requestLongType": "SendWakeOnLANRequest",
              "requestFullType": "gnoi.layer2.SendWakeOnLANRequest",
              "requestStreaming": false,
              "responseType": "SendWakeOnLANResponse",
              "responseLongType": "SendWakeOnLANResponse",
              "responseFullType": "gnoi.layer2.SendWakeOnLANResponse",
              "responseStreaming": false
            }
          ]
        }
      ]
    }
  ],
  "scalarValueTypes": [
    {
      "protoType": "double",
      "notes": "",
      "cppType": "double",
      "csType": "double",
      "goType": "float64",
      "javaType": "double",
      "phpType": "float",
      "pythonType": "float",
      "rubyType": "Float"
    },
    {
      "protoType": "float",
      "notes": "",
      "cppType": "float",
      "csType": "float",
      "goType": "float32",
      "javaType": "float",
      "phpType": "float",
      "pythonType": "float",
      "rubyType": "Float"
    },
    {
      "protoType": "int32",
      "notes": "Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "int64",
      "notes": "Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint64 instead.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "uint32",
      "notes": "Uses variable-length encoding.",
      "cppType": "uint32",
      "csType": "uint",
      "goType": "uint32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int/long",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "uint64",
      "notes": "Uses variable-length encoding.",
      "cppType": "uint64",
      "csType": "ulong",
      "goType": "uint64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sint32",
      "notes": "Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sint64",
      "notes": "Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "fixed32",
      "notes": "Always four bytes. More efficient than uint32 if values are often greater than 2^28.",
      "cppType": "uint32",
      "csType": "uint",
      "goType": "uint32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "fixed64",
      "notes": "Always eight bytes. More efficient than uint64 if values are often greater than 2^56.",
      "cppType": "uint64",
      "csType": "ulong",
      "goType": "uint64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "sfixed32",
      "notes": "Always four bytes.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sfixed64",
      "notes": "Always eight bytes.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "bool",
      "notes": "",
      "cppType": "bool",
      "csType": "bool",
      "goType": "bool",
      "javaType": "boolean",
      "phpType": "boolean",
      "pythonType": "boolean",
      "rubyType": "TrueClass/FalseClass"
    },
    {
      "protoType": "string",
      "notes": "A string must always contain UTF-8 encoded or 7-bit ASCII text.",
      "cppType": "string",
      "csType": "string",
      "goType": "string",
      "javaType": "String",
      "phpType": "string",
      "pythonType": "str/unicode",
      "rubyType": "String (UTF-8)"
    },
    {
      "protoType": "bytes",
      "notes": "May contain any arbitrary sequence of bytes.",
      "cppType": "string",
      "csType": "ByteString",
      "goType": "[]byte",
      "javaType": "ByteString",
      "phpType": "string",
      "pythonType": "str",
      "rubyType": "String (ASCII-8BIT)"
    }
  ]
}