{
  "files": [
    {
      "name": "interface.proto",
      "description": "",
      "package": "gnoi.interface",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "ClearInterfaceCountersRequest",
          "longName": "ClearInterfaceCountersRequest",
          "fullName": "gnoi.interface.ClearInterfaceCountersRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "interface",
              "description": "",
              "label": "repeated",
              "type": "Path",
              "longType": "gnoi.types.Path",
              "fullType": "gnoi.types.Path",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ClearInterfaceCountersResponse",
          "longName": "ClearInterfaceCountersResponse",
          "fullName": "gnoi.interface.ClearInterfaceCountersResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "GetLoopbackModeRequest",
          "longName": "GetLoopbackModeRequest",
          "fullName": "gnoi.interface.GetLoopbackModeRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "interface",
              "description": "",
              "label": "",
              "type": "Path",
              "longType": "gnoi.types.Path",
              "fullType": "gnoi.types.Path",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetLoopbackModeResponse",
          "longName": "GetLoopbackModeResponse",
          "fullName": "gnoi.interface.GetLoopbackModeResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "mode",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SetLoopbackModeRequest",
          "longName": "SetLoopbackModeRequest",
          "fullName": "gnoi.interface.SetLoopbackModeRequest",
          "description": "SetLoopbackModeRequest requests the provide interface be have its loopback\nmode set to the specified mode. The mode may be vendor specific. For example,\non a transport device, available modes are \"none\", \"mac\", \"phy\", \n\"phy_remote\", \"framer_facility\", and \"framer_terminal\".",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "interface",
              "description": "",
              "label": "",
              "type": "Path",
              "longType": "gnoi.types.Path",
              "fullType": "gnoi.types.Path",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "mode",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SetLoopbackModeResponse",
          "longName": "SetLoopbackModeResponse",
          "fullName": "gnoi.interface.SetLoopbackModeResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        }
      ],
      "services": [
        {
          "name": "Interface",
          "longName": "Interface",
          "fullName": "gnoi.interface.Interface",
          "description": "",
          "methods": [
            {
              "name": "SetLoopbackMode",
              "description": "SetLoopbackMode is used to set the mode of loopback on a interface.",
              "requestType": "SetLoopbackModeRequest",
              "requestLongType": "SetLoopbackModeRequest",
              "requestFullType": "gnoi.interface.SetLoopbackModeRequest",
              "requestStreaming": false,
              "responseType": "SetLoopbackModeResponse",
              "responseLongType": "SetLoopbackModeResponse",
              "responseFullType": "gnoi.interface.SetLoopbackModeResponse",
              "responseStreaming": false
            },
            {
              "name": "GetLoopbackMode",
              "description": "GetLoopbackMode is used to get the mode of loopback on a interface.",
              "requestType": "GetLoopbackModeRequest",
              "requestLongType": "GetLoopbackModeRequest",
              "requestFullType": "gnoi.interface.GetLoopbackModeRequest",
              "requestStreaming": false,
              "responseType": "GetLoopbackModeResponse",
              "responseLongType": "GetLoopbackModeResponse",
              "responseFullType": "gnoi.interface.GetLoopbackModeResponse",
              "responseStreaming": false
            },
            {
              "name": "ClearInterfaceCounters",
              "description": "ClearInterfaceCounters will reset the counters for the provided interface.",
              "requestType": "ClearInterfaceCountersRequest",
              "requestLongType": "ClearInterfaceCountersRequest",
              "requestFullType": "gnoi.interface.ClearInterfaceCountersRequest",
              "requestStreaming": false,
              "responseType": "ClearInterfaceCountersResponse",
              "responseLongType": "ClearInterfaceCountersResponse",
              "responseFullType": "gnoi.interface.ClearInterfaceCountersResponse",
              "responseStreaming": false
            }
          ]
        }
      ]
    }
  ],
  "scalarValueTypes": [
    {
      "protoType": "double",
      "notes": "",
      "cppType": "double",
      "csType": "double",
      "goType": "float64",
      "javaType": "double",
      "phpType": "float",
      "pythonType": "float",
      "rubyType": "Float"
    },
    {
      "protoType": "float",
      "notes": "",
      "cppType": "float",
      "csType": "float",
      "goType": "float32",
      "javaType": "float",
      "phpType": "float",
      "pythonType": "float",
      "rubyType": "Float"
    },
    {
      "protoType": "int32",
      "notes": "Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "int64",
      "notes": "Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint64 instead.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "uint32",
      "notes": "Uses variable-length encoding.",
      "cppType": "uint32",
      "csType": "uint",
      "goType": "uint32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int/long",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "uint64",
      "notes": "Uses variable-length encoding.",
      "cppType": "uint64",
      "csType": "ulong",
      "goType": "uint64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sint32",
      "notes": "Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sint64",
      "notes": "Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "fixed32",
      "notes": "Always four bytes. More efficient than uint32 if values are often greater than 2^28.",
      "cppType": "uint32",
      "csType": "uint",
      "goType": "uint32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "fixed64",
      "notes": "Always eight bytes. More efficient than uint64 if values are often greater than 2^56.",
      "cppType": "uint64",
      "csType": "ulong",
      "goType": "uint64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "sfixed32",
      "notes": "Always four bytes.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sfixed64",
      "notes": "Always eight bytes.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "bool",
      "notes": "",
      "cppType": "bool",
      "csType": "bool",
      "goType": "bool",
      "javaType": "boolean",
      "phpType": "boolean",
      "pythonType": "boolean",
      "rubyType": "TrueClass/FalseClass"
    },
    {
      "protoType": "string",
      "notes": "A string must always contain UTF-8 encoded or 7-bit ASCII text.",
      "cppType": "string",
      "csType": "string",
      "goType": "string",
      "javaType": "String",
      "phpType": "string",
      "pythonType": "str/unicode",
      "rubyType": "String (UTF-8)"
    },
    {
      "protoType": "bytes",
      "notes": "May contain any arbitrary sequence of bytes.",
      "cppType": "string",
      "csType": "ByteString",
      "goType": "[]byte",
      "javaType": "ByteString",
      "phpType": "string",
      "pythonType": "str",
      "rubyType": "String (ASCII-8BIT)"
    }
  ]
}